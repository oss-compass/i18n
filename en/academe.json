{
  "academic_research_cooperation": "Compass Collaboration",
  "academic_research_desc": "Through Compass collaboration, we establish a bridge between academia, industry, and research, promote academic achievements and best practices in open source, and enhance collaboration efficiency.",
  "submit_your_application_now": "Contact Us",
  "cooperation_case": "Cooperation Case",
  "cooperation_process": "Cooperation Process",
  "submit_application": "Submit Application",
  "affirm": "OSS Compass Confirm",
  "conduct_joint_research": "Conduct Joint Research",
  "experiment_verify": "Experiment Verification",
  "release_results": "Release Results",
  "submit_application_desc1": "If your research institution or community is interested in academic research or program promotion with OSS Compass, please submit your cooperation intention through the website.",
  "submit_application_desc2": "The areas of cooperation include but are not limited to:",
  "submit_application_desc3": "Open source community and software evaluation programs",
  "submit_application_desc4": "Open source community governance and operation programs",
  "submit_application_desc7": "To submit your cooperation intention, please provide information about yourself and your team, a brief description of existing research or achievements, and the areas in which you intend to conduct research collaboration with us.",
  "affirm_desc": "Our team will evaluate and confirm the received cooperation applications. Once the application is accepted, we will communicate and discuss further details with the collaborating organization through email or other suitable communication methods.",
  "conduct_joint_research_desc": "After determining the cooperation details and objectives, both parties will officially conduct joint research. OSS Compass will provide you with foundational datasets in the relevant research field, jointly develop research plans, and engage in a series of academic seminars and collaborative research.",
  "verify_desc": "When the joint research between both parties has made progress, we will work together to transform the research progress into data metrics, measurement tools, or analysis models for the open source community. Through the OSS Compass community and platform, we will provide experiential services to validate research results, ensuring the reliability and feasibility of the research, and further promote the development of open source software metrics and ecosystem evaluation.",
  "release_desc1": "Once the joint research is completed and achieves the expected goals, OSS Compass will collaborate with you to organize, summarize, and present the research findings for wider sharing and dissemination. The release can take various forms, including but not limited to:",
  "release_desc2": "Providing measurement tools or analysis models through OSS Compass",
  "release_desc3": "Jointly publishing research reports, papers, technical guides, etc.",
  "discuss_the_evolution": "OSS Compass community collaborates with academia and industry to discuss and advance open source collaboration.",
  "author": "Author:",
  "nju_title": "Predicting Open Source Project Activity Based on OSS Compass Metrics",
  "nju_author": "Authors: Zheng Liu, Xiaolan Zu, Xingyu Luo, Zihan Wang ,Nanjing University undergraduate;Jierui Zhang, PhD candidate at Nanjing University. Department of Computer Science and Technology, Nanjing University - National Key Laboratory of Software New Technology, OSS Compass Community",
  "nju_author2": "Advisor: Liang Wang, Xianping Tao, Yehui Wang",
  "nju_desc": "Introduction: Research on the Prediction of Open Source Software Project Health Based on Metrics in the Innovation Training Program for College Students at Nanjing University in 2024. Reference article:",
  "nju_desc2": "This method predicts the future activity status of open source projects based on OSS Compass metrics. The method uses a feature-based time series classification prediction method by extracting statistical features from the OSS Compass metric sequence. It trains and applies machine learning intelligent classification models to predict the future active/inactive status of projects and provides approximate probability estimates. Cross-validation results on nearly 600 project datasets show an accuracy rate close to 90% for this method. In terms of generalization ability, this method can still achieve an accuracy rate of 80% on a dataset of over ten thousand repositories, demonstrating its preliminary practicality. The analysis results can partially reflect the future health status of open source projects and demonstrate the effectiveness of the OSS Compass metric system in measuring the health of open source software. This method is expected to provide valuable reference information for users, developers, investors, and managers of open source software.",
  "nju2_title": "An Information Entropy-Based Approach to Quantify Community Evolution in Open Source Developer Social Networks",
  "nju2_author": "Authors: Jierui Zhang,Ying Li. Department of Computer Science and Technology, Nanjing University - National Key Laboratory of Software New Technology, OSS Compass Community",
  "nju2_author2": "Advisor: Liang Wang, Xianping Tao",
  "nju2_desc": "Introduction: In this study, we study the community evolution behavior in developer social networks around open source software projects, in response to the limitation of traditional community evolution analysis techniques being biased towards qualitative rather than quantitative analysis. We propose a set of community split, shrink, merge, and expand indices based on information entropy to measure the evolutionary behavior of open source developer social networks. Empirical studies demonstrate that these indices effectively characterize the evolution of open source communities, by achieving a 94.1% accuracy in drawing conclusions consistent with existing qualitative work through simple rules. Furthermore, additional research indicates a significant correlation between the proposed community evolution indices and the productivity of open source projects, represented by the number of commits. The information entropy-based measurement indices presented in this study provide quantitative support for understanding and analyzing the evolutionary behavior of open source communities. Reference article:",
  "nju3_title": "Method for Fork Diversity in Open Source Software",
  "nju3_author": "Authors: Zhiwen Zheng, Xiangchen Wu, Baihui Sang, Jierui Zhang. Department of Computer Science and Technology, Nanjing University - National Key Laboratory of Software New Technology, OSS Compass Community",
  "nju3_author2": "Advisor: Liang Wang, Xianping Tao",
  "nju3_desc": "Introduction: This research focuses on project forks on open-source software (OSS) platforms, revolving around measuring and understanding the diversity of forks in open-source software projects. The paper accomplishes this by constructing a novel fork entropy based on Rao's second entropy and assessing this diversity based on modifications to project files. Empirical studies indicate a significant correlation between fork entropy in open-source projects and various key outcomes, including external productivity of the project (measured by the number of contributions from external contributors), acceptance rate of external contributors' pull requests, and the reported number of bugs. Additionally, we observe significant interactions between fork entropy and other factors, such as the quantity of forks. These findings suggest that fork entropy, as an effective metric, not only enhances the current available measurements of forks in open-source software projects but also deepens our understanding of the development process based on forked repositories. It holds the potential to support further research and applications. Reference article:",
  "nju4_title": "Open Source Software Measurement and Evaluation Platform",
  "nju4_author": "Authors: Hu Xiaotong, Chai Xiaoqi, Duan Yong, Liu Fenqin, Nanjing University",
  "nju4_author2": "Advisor: Situ Lingyun, Nanjing University",
  "nju4_desc": "Introduction: In the process of software development, it is inevitable to introduce third-party open-source software. However, with a large number of open-source software, rapid version iteration, and low documentation quality, developers find it difficult to determine whether open-source software meets functional requirements, avoids security flaws, and adapts to business scenarios. Effective open-source software measurement and evaluation are key to optimizing the quality of open-source software. To this end, we have built an open-source software measurement and evaluation platform, which standardizes the measurement process, customizes measurement models, extends measurement tools, and explains measurement results. The platform embeds self-developed software function measurement tools, which can automatically generate multi-level functional understanding documents for open-source software, such as function APIs, classes, modules, and repositories. It supports comparative analysis of multiple software of the same type, and supports open-source software function selection and quality optimization in software development scenarios.",
  "pku1_title": "Intelligent Recommendation for Beginner Tasks: GFI-Bot",
  "pku1_author": "Author: Wenxin Xiao, Ph.D. candidate at Peking University",
  "pku1_author2": "Advisor: Professor Minghui Zhou",
  "pku1_desc1": "Introduction: On the GitHub platform, many projects use the 'good first issue' (GFI) labeling mechanism to mark problems suitable for beginners, guiding them to make their first contributions to the project by addressing these introductory tasks. Tan et al.'s research found that the popularity of this mechanism is gradually increasing. However, in most projects, the proportion of issues marked as GFI is relatively low. What is even more concerning is that the resolution rate of GFI issues is not optimistic. Among all GFI issues, only about 60% are successfully solved by beginners, and a large number of GFI issues remain unresolved. On platforms like GitHub, each issue contains not only a title and description but also diverse features such as labels and comments. Therefore, Xiao et al. proposed an automatic labeling method for beginner tasks based on multiple task features. Using an XGBoost classifier, they classify issues solved by beginners from other issues at two time points: when the issue is opened and when it is resolved.",
  "pku1_desc2": "Project URL:",
  "pku2_title": "Intelligent Recommendation for Library Migration: MigrationAdvisor",
  "pku2_author": "Authors: Haiqiao Gu, Hao He and Yiliang Zhao, PhD candidates at Peking University",
  "pku2_author2": "Advisor: Professor Minghui Zhou, Academician Huaimin Wang",
  "pku2_desc1": "Introduction: With the rise of open source software (OSS) and the development of software package hosting platform, more and more developers choose to reuse existing third-party libraries for project development, so as to reduce development costs and improve development efficiency. However, in the process of reusing third-party libraries, when developers cannot solve the problems existing in the library through promotion and degradation, such as security vulnerabilities, compatibility, etc., they need to replace it with another third-party library with the same or similar functions, this operation is called library migration. However, due to the limited information available, developers often choose alternative libraries based on subjective opinions. By analyzing the historical development activities and ranking the library migration using multiple indicators, we can recommend the most suitable library migration scheme. Firstly, the migration history is mined from a large number of software warehouses, and the migration knowledge base is constructed. Given a library that needs to be migrated, select the candidate target libraries and then rank them by combining relevant metrics that capture evidence from different dimensions of development history: rule support, cause support, distance support, and API support; Through intelligent analysis of a large number of GitHub repositories, it is possible to recommend the target of outbound migration.",
  "pku2_desc2": "Project URL:",
  "pku3_title": "LicenseRec: An Open Source Software License Recommendation Tool",
  "pku3_author": "Author: Weiwei Xu, Ph.D. candidate at Peking University",
  "pku3_author2": "Advisor: Professor Minghui Zhou",
  "pku3_desc1": "Introduction: When developers face a large number of similar licenses and complex legal terms, the problem of how to choose the right open source license for their projects arises. Xu et al. proposed LicenseRec, an open source software license recommendation tool, aiming to help users select licenses that meet their preferences based on compliance with third-party component licenses, open source style, business requirements, and community development. To achieve this goal, a knowledge base was built, which includes common license terms, compatibility information, and license selection guidelines. The workflow involves scanning the licenses of third-party components, checking license compatibility, and characterizing user preferences through user interaction. Then, based on this information, the tool recommends the most suitable license. This tool can scan and check the licenses of third-party components for compatibility and also characterize user preferences to recommend licenses that best meet their needs.",
  "pku3_desc2": "Tool link:",
  "pku3_desc3": "Project URL:",
  "openeuler_title": "openEuler Document Simulated Reading Companion",
  "openeuler_author": "Author: openEuler Community",
  "openeuler_desc1": "Introduction: The document simulated reading companion solution is designed and promoted by the openEuler community. It helps the community continuously improve and enhance the quality and user experience of the documentation without interrupting the reading experience of users.",
  "openeuler_desc2": "Project URL:",
  "experience_immediately": "Experience Immediately",
  "experience": "Experience",
  "calculate": "Calculate",
  "type_address_of": "Please enter the repository URL",
  "please_enter_a_valid": "Please enter a valid URL",
  "failed_to_fetch_data": "Failed to fetch data!",
  "result": "Calculation Result:",
  "data_usage_process": "Data usage apply",
  "atom_title": "Open Atom Open Source Foundation Global Open Source Collaboration Dashboard",
  "atom_desc": "The Open Atom Open Source Foundation's Global Open Source Collaboration Dashboard showcases the state of open source development across various countries, covering key metrics such as the number of developers and code submissions. Data is sourced from OSS Compass, providing real-time and accurate analysis of the open source ecosystem, helping users understand the performance and contributions of different countries in the open source field.",
  "oh_title": "OpenHarmony TPC Governance Platform",
  "oh_desc": "The OpenHarmony TPC Governance Platform offers a complete governance process for third-party libraries, including selection, incubation, and graduation. Through a systematic evaluation mechanism, it ensures the quality and applicability of the selected libraries. The incubation phase provides technical support to help projects develop; after graduation, the platform continues to monitor and maintain to ensure the healthy growth of projects in the community.",
  "deep_insight_title": "OSS Compass Project Deep Insights",
  "deep_insight_desc": "OSS Compass Project Deep Insights provides contributor profiles, details on issues and PRs, and is dedicated to providing reliable data and technical service support for the open source community. Through in-depth analysis, it enhances community efficiency, promotes healthy development, and helps developers better participate in and contribute to the open source ecosystem."
}